{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","App.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","trim","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","ref","useEffect","current","usePrevious","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","updatedTasks","map","remainingTasks","editedTaskList","taskList","filterList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","newTask","nanoid","tabIndex","role","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37191b35.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Form(props) {\r\n  const [name, setName] = useState('');\r\n\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!name.trim()) {\r\n      return;\r\n    }\r\n    props.addTask(name);\r\n    setName(\"\");\r\n  }\r\n\r\n\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className=\"label-wrapper\">\r\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n          What needs to be done?\r\n        </label>\r\n      </h2>\r\n\r\n      <input\r\n        type=\"text\"\r\n        id=\"new-todo-input\"\r\n        className=\"input input__lg\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn toggle-btn\"\r\n      aria-pressed={props.isPressed}\r\n      onClick={() => props.setFilter(props.name)}\r\n    >\r\n      <span className=\"visually-hidden\">Show </span>\r\n      <span>{props.name}</span>\r\n      <span className=\"visually-hidden\"> tasks</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FilterButton;","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nexport default function Todo(props) {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState('');\r\n\r\n  const editFieldRef = useRef(null);\r\n  const editButtonRef = useRef(null);\r\n\r\n  const wasEditing = usePrevious(isEditing);\r\n\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!newName.trim()) {\r\n      return;\r\n    }\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  }\r\n\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n        <input\r\n          id={props.id}\r\n          className=\"todo-text\"\r\n          type=\"text\"\r\n          value={newName || props.name}\r\n          onChange={handleChange}\r\n          ref={editFieldRef}\r\n        />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn todo-cancel\"\r\n          onClick={() => setEditing(false)}\r\n        >\r\n          Cancel\r\n          <span className=\"visually-hidden\">renaming {props.name}</span>\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n          <input\r\n            id={props.id}\r\n            type=\"checkbox\"\r\n            defaultChecked={props.completed}\r\n            onChange={() => props.toggleTaskCompleted(props.id)}\r\n          />\r\n          <label className=\"todo-label\" htmlFor={props.id}>\r\n            {props.name}\r\n          </label>\r\n        </div>\r\n        <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn\"\r\n          onClick={() => setEditing(true)}\r\n          ref={editButtonRef}\r\n          >\r\n            Edit <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn__danger\"\r\n            onClick={() => props.deleteTask(props.id)}\r\n          >\r\n            Delete <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n        </div>\r\n    </div>\r\n  );\r\n\r\n\r\n  useEffect(() => {\r\n    if (!wasEditing && isEditing) {\r\n      editFieldRef.current.focus();\r\n    }\r\n    if (wasEditing && !isEditing) {\r\n      editButtonRef.current.focus();\r\n    }\r\n  }, [wasEditing, isEditing]);\r\n\r\n\r\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\r\n}","import React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\n\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new obkect\n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks\n  .filter(FILTER_MAP[filter])\n  .map(task => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Eat\", completed: true },\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\n  { id: \"todo-2\", name: \"Repeat\", completed: false }\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}